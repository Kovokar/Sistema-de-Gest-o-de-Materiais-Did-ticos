"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from decouple import config # use get envs
from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5-=1gdu$bk8t^=*m@qd4nzdr4_$18$&s95id8ckykeon#f6h$p'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'sistema-de-gest-o-de-materiais-did-ticos.onrender.com',
    'localhost',
    '127.0.0.1'
]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Third-party apps
    'rest_framework',           # Django REST Framework
    'django_filters',           # Advanced filtering
    'corsheaders',              # CORS handling for frontend
    'drf_spectacular',          # OpenAPI/Swagger documentation
    'rest_framework_simplejwt',

    
    # Your app
    'api',        # Replace with your actual app name
]

AUTH_USER_MODEL = 'api.Usuario'

SIMPLE_JWT = {
    "USER_ID_FIELD": "id_usuario",   # usa o campo real do banco
    "USER_ID_CLAIM": "user_id",
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=12),   # token de acesso dura 15 min
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),      # token de refresh dura 1 dia
    "ROTATE_REFRESH_TOKENS": False,                   # se True, gera novo refresh token a cada uso
    "BLACKLIST_AFTER_ROTATION": True,                 # s√≥ funciona se ROTATE_REFRESH_TOKENS=True
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',        # Must be at the top
]


ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST', default='localhost'),
        'PORT': config('DB_PORT', default='5432'),
    }
}


EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Django REST Framework configuration
REST_FRAMEWORK = {
    # Pagination
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    
    # Filtering, searching and ordering
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    
    # Authentication (change for production)
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.TokenAuthentication',  # Enable if using tokens
        'rest_framework_simplejwt.authentication.JWTAuthentication',

    ],
    
    # Permissions (change for production)
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',  # Change to IsAuthenticated for production
    ],
    
    # Renderers
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    
    # Parsers
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
    ],
    
    # Schema generation
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    
    # Error handling
    'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler',
    
    # Throttling (optional - for rate limiting)
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '100/hour',
        'user': '1000/hour'
    }
}




# drf-spectacular (OpenAPI/Swagger) configuration
SPECTACULAR_SETTINGS = {
    # Basic API information
    'TITLE': 'Sistema de Gest√£o de Material Did√°tico API',
    # 'DESCRIPTION': '''
    # API RESTful para gerenciamento de envios de material did√°tico educacional.
    
    # ## Funcionalidades Principais
    
    # ### üë• Gest√£o de Usu√°rios e Perfis
    # - Cadastro e gerenciamento de usu√°rios
    # - Controle de perfis e permiss√µes
    # - Valida√ß√£o de CPF e dados pessoais
    
    # ### üè´ Gest√£o Acad√™mica
    # - Controle de etapas escolares (s√©ries)
    # - Gerenciamento de disciplinas
    # - Organiza√ß√£o por ano letivo
    
    # ### üìö Controle de Material Did√°tico
    # - Registro de envios de material
    # - Acompanhamento de status
    # - Controle de prazos e valida√ß√µes
    # - Observa√ß√µes da ger√™ncia
    
    # ### üìä Relat√≥rios e Estat√≠sticas
    # - Estat√≠sticas por per√≠odo
    # - Relat√≥rios de envios atrasados
    # - Acompanhamento por usu√°rio/disciplina
    
    # ## Autentica√ß√£o
    
    # Durante o desenvolvimento, a API est√° configurada para acesso p√∫blico.
    # Em produ√ß√£o, ser√° necess√°rio configurar autentica√ß√£o adequada.
    
    # ## Filtros e Buscas
    
    # Todos os endpoints suportam:
    # - **Filtros**: por campos espec√≠ficos (ex: `?ano_referencia=2024`)
    # - **Busca**: texto livre em campos relevantes (ex: `?search=Maria`)
    # - **Ordena√ß√£o**: por diferentes crit√©rios (ex: `?ordering=nome_usuario`)
    # - **Pagina√ß√£o**: autom√°tica com controle de tamanho (ex: `?page=2&page_size=50`)
    
    # ## Exemplos de Uso
    
    # ### Filtrar envios por per√≠odo
    # ```
    # GET /api/envios-material/?ano_referencia=2024&mes_referencia=3
    # ```
    
    # ### Buscar usu√°rios
    # ```
    # GET /api/usuarios/?search=Maria Silva
    # ```
    
    # ### Ordenar por data
    # ```
    # GET /api/envios-material/?ordering=-data_envio_escola
    # ```
    # ''',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    
    # Contact and license information
    'CONTACT': {
        'name': 'Equipe de Desenvolvimento',
        'email': 'dev@educacao.gov.br',
        'url': 'https://educacao.gov.br/contato'
    },
    'LICENSE': {
        'name': 'MIT License',
        'url': 'https://opensource.org/licenses/MIT'
    },
    
    # API organization
    'TAGS': [
        {
            'name': 'Perfis',
            'description': 'üë§ Gest√£o de perfis de usu√°rio (roles/fun√ß√µes do sistema)'
        },
        {
            'name': 'Usu√°rios', 
            'description': 'üë• Gest√£o completa de usu√°rios do sistema'
        },
        {
            'name': 'Etapas Escolares',
            'description': 'üéì Gest√£o de etapas escolares (s√©ries/anos letivos)'
        },
        {
            'name': 'Disciplinas',
            'description': 'üìñ Gest√£o de disciplinas acad√™micas'
        },
        {
            'name': 'Status de Envio',
            'description': 'üìä Gest√£o de status dos envios de material'
        },
        {
            'name': 'Envios de Material',
            'description': 'üìö Gest√£o completa de envios de material did√°tico'
        }
    ],
    
    # External documentation
    'EXTERNAL_DOCS': {
        'description': 'Documenta√ß√£o Adicional',
        'url': 'https://docs.educacao.gov.br/api'
    },
    
    # Server environments
    'SERVERS': [
        {
            'url': 'http://localhost:8000',
            'description': 'Servidor de Desenvolvimento Local'
        },
        {
            'url': 'https://api-dev.educacao.gov.br',
            'description': 'Servidor de Desenvolvimento'
        },
        {
            'url': 'https://api.educacao.gov.br',
            'description': 'Servidor de Produ√ß√£o'
        }
    ],
    
    # Swagger UI customization
    'SWAGGER_UI_SETTINGS': {
        'deepLinking': True,
        'persistAuthorization': True,
        'displayOperationId': True,
        'filter': True,
        'tryItOutEnabled': True,
        'supportedSubmitMethods': ['get', 'post', 'put', 'patch', 'delete'],
        'defaultModelsExpandDepth': 2,
        'defaultModelExpandDepth': 2,
    },
    
    # Advanced settings
    'COMPONENT_SPLIT_REQUEST': True,
    'SORT_OPERATIONS': True,
    'ENUM_NAME_OVERRIDES': {
        'ValidationErrorEnum': 'django.core.exceptions.ValidationError',
    },
    'POSTPROCESSING_HOOKS': [],
    'PREPROCESSING_HOOKS': [],
}

# CORS configuration for frontend integration
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",      # React development server
    "http://127.0.0.1:3000",      # Alternative localhost
    "http://localhost:8080",      # Vue.js development server
    "http://localhost:4200",      # Angular development server
    "https://app.educacao.gov.br", # Production frontend
]

# CORS settings
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'cache-control',
]

CORS_ALLOWED_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# Security settings for production
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'

# Internationalization
LANGUAGE_CODE = 'pt-br'
TIME_ZONE = 'America/Fortaleza'  # Adjust to your timezone
USE_I18N = True
USE_TZ = True

